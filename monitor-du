#!/bin/bash

# Based on https://unix.stackexchange.com/a/259254
bytesToHuman() {
    b=${1:-0}; d=''; s=0; S=(Bytes {K,M,G,T,E,P,Y,Z}iB)
    m= ; [ ${b:0:1} == "-" ] && m="-" && b=${b:1}
    while ((b > 1024)); do
        d="$(printf ".%02d" $((b % 1024 * 100 / 1024)))"
        b=$((b / 1024))
        let s++
    done
    echo "$m$b$d ${S[$s]}"
}

# Based on https://unix.stackexchange.com/a/301490
monitorio () {
# show write speed for file or directory
    target="$1"
    interval="3"
    [[ "$2" =~ ^[0-9.]+$ ]] && interval=$2
    size=$(du -sb "$target" | awk '{print $1}')
    firstrun="1"
    echo "Target: $target"
    while [ 1 ]; do
        prevsize=$size
        size=$(du -sb "$target" | awk '{print $1}')
        kb=$((${size} - ${prevsize}))
        kbsec=$((${kb}/${interval} ))
        kbmin=$((${kb}* (60/${interval}) ))
        kbhour=$((${kbmin}*60))
        # exit if this is not first loop & file size has not changed
        if [ $firstrun -ne 1 ] && [ $kb -eq 0 ]; then break; fi
        printf "\r%`tput cols`s"
        printf "\r  speed | %15s /s | %15s /min | %15s /hour |  size: %15s |" "`bytesToHuman ${kbsec}`" "`bytesToHuman ${kbmin}`" "`bytesToHuman ${kbhour}`" "`bytesToHuman ${size}`"
        firstrun=0
        sleep $interval
    done
}

monitorio $1 $2
